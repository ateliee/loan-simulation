name: Deploy

on:
  workflow_run:
    branches: ["main"]
    workflows: ["test"]
    types:
      - completed

concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'

      - name: Get latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Generate new tag
        id: generate_tag
        run: |
          LATEST_TAG=${{ steps.get_latest_tag.outputs.latest_tag }}
          VERSION=$(echo $LATEST_TAG | cut -d'v' -f2)
          MAJOR=$(echo $VERSION | cut -d'.' -f1)
          MINOR=$(echo $VERSION | cut -d'.' -f2)
          PATCH=$(echo $VERSION | cut -d'.' -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$NEW_PATCH"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git tag ${{ steps.generate_tag.outputs.new_tag }}
          git push origin ${{ steps.generate_tag.outputs.new_tag }}

  deploy:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: nuxt/package-lock.json
      - run: npm ci
        working-directory: ./nuxt
      - run: npm run generate
        working-directory: ./nuxt
      - run: npm install -g firebase-tools
      - run: firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
